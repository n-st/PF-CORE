package de.dal33t.powerfolder.util;

import static de.dal33t.powerfolder.util.AntiSerializationVulnerability.checkClasspath;
import static de.dal33t.powerfolder.util.AntiSerializationVulnerability.isBlacklisted;
import static de.dal33t.powerfolder.util.AntiSerializationVulnerability.isWhitelisted;
import static junit.framework.TestCase.assertEquals;
import static junit.framework.TestCase.assertTrue;
import static org.junit.Assert.assertFalse;

import java.io.ByteArrayOutputStream;
import java.io.PrintStream;

import org.junit.After;
import org.junit.Before;
import org.junit.Test;

public class AntiSerializationVulnerabilityTest {

    private static final String WHITELISTED_CLASS = "java.lang.String";
    private static final String BLACKLISTED_CLASS = "org.apache.commons.fileupload.FileUpload";
    private static final String UNKNOWN_CLASS = "com.MyCLass";

    private final ByteArrayOutputStream err = new ByteArrayOutputStream();
    private final PrintStream originalErr = System.err;

    @Before
    public void setupErrStream() {
        System.setErr(new PrintStream(err));
    }

    @After
    public void restoreErrStream() {
        System.setErr(originalErr);
    }

    @Test
    public void shouldWhiteListWhiteListedClass() {
        assertTrue(isWhitelisted(WHITELISTED_CLASS));
    }

    @Test
    public void shouldNotWhiteListBlackListedClass() {
        assertFalse(isWhitelisted(BLACKLISTED_CLASS));
    }

    @Test
    public void shouldBlackListBlackListedClass() {
        assertTrue(isBlacklisted(BLACKLISTED_CLASS));
    }

    @Test
    public void shouldNotBlackListWhiteListedClass() {
        assertFalse(isBlacklisted(WHITELISTED_CLASS));
    }

    @Test
    public void shouldNotBlackListUnknownCLass() {
        assertFalse(isBlacklisted(UNKNOWN_CLASS));
    }

    @Test
    public void testcheckClasspath() {
        checkClasspath();
        assertEquals("", err.toString());
    }
}
