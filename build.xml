<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE project   [
<!ENTITY common SYSTEM "common.xml">
]>

<!-- 
Author <a href="mailto:schaatser@powerfolder.com">Jan van Oosterom</a>
Version: $Revision: 1.8 $

Default Target = jar
compiles and generates a signed jar

Setup: use the ant.properties file to setup your local settings.
 - 1 for signing update the location of the keystore in the property KeystoreLocation
 - 2 Password for signing is not checked in cvs ... update property SignPassword

Optional Targets:
clean  - cleans up the working dirs
installer - generates an installer (see Notes)

For creation of the installer:
 1 - Works only on windows systems, install nsis and get the installer scripts from the cvs 
     (note the cvs is old for the installer, we use our own SVN for that now).
 2 - Setup the correct version numbers
 3 - Setup your name it will be included in the jar manifest file
 4 - Make sure to set up the following properties:
     InstallerFilesLocation and InstallerGeneratorProgram
-->
<project name="PowerFolder" default="jar" basedir=".">
	<description>
        Build PowerFolder.jar with ant
    </description>
	
	<condition property="isMac">
	    <os family="mac" />
	</condition>
	
	<condition property="isWindows">
		<os family="windows" />
	</condition>
	
    <condition property="isLinux">
        <and>
            <os family="unix" />

            <not>
                <os family="mac" />
            </not>
        </and>
    </condition>

	<target name="debug">
		<property name="Debug" location="on" />
	</target>
	
	<property environment="env"/>

	<target name="loadproperties0">
		<!-- Load build-local.properties -->
		<available property="build.local.properties.ok" file="build-local.properties" type="file" />
		<!--<fail unless="build.local.properties.ok">
					File 'build-local.properties' not found. Please create one. Copy the sample file 'build-local.properties.sample' and adapt values to your system configuration
		</fail>-->
		<property file="build-local.properties" />
		<condition property="outputdirset">
			<isset property="output.dir" />
		</condition>
	</target>

	<!-- if output dir not set we use the default current dir -->
	<target name="loadproperties" depends="loadproperties0" unless="outputdirset">
		<property name="output.dir" location="" />
	</target>
	
	<target name="detect-version" depends="loadproperties" unless="MajorVersion">
		<script language="javascript" manager="bsf" classpath="lib-build/ant-apache-bsf-1.9.2.jar:lib-build/bsf.jar:lib-build/js.jar:lib-build/commons-logging-1.1.1.jar"><![CDATA[
			var prjDir = project.getProperty("powerfolder.project.dir");
			if (!prjDir)  {
				prjDir = '../PF-CORE';
				if (!new java.io.File(prjDir).exists()) {
					prjDir = '.';
				}
			} else {
				prjDir += '';
			}
			var reader = new java.io.BufferedReader(java.io.FileReader(prjDir + '/src/main/de/dal33t/powerfolder/Controller.java'));
					    
			var line = "";
			while ((line = reader.readLine()) != null) {
				if (line.indexOf("int MAJOR_VERSION") >= 0) {
					var start = line.indexOf("=") + 1;
					var end = line.indexOf(";");
					var vInfo = line.substring(start,end).trim();
					project.setProperty("MajorVersion", vInfo);
				} else if (line.indexOf("int MINOR_VERSION") >= 0) {
					var start = line.indexOf("=") + 1;
					var end = line.indexOf(";");
					var vInfo = line.substring(start,end).trim();
					project.setProperty("MinorVersion", vInfo);
				} else if (line.indexOf("int REVISION_VERSION") >= 0) {
					var start = line.indexOf("=") + 1;
					var end = line.indexOf(";");
					var vInfo = line.substring(start,end).trim();
					project.setProperty("RevisionVersion", vInfo);
				}
			}
		]]></script>
		<echo>
			Auto detected version: ${MajorVersion}.${MinorVersion}.${RevisionVersion}
		</echo>
	</target>

	<target name="init" depends="loadproperties, detect-version">
		<!-- sets the standard DSTAMP, TSTAMP, and TODAY properties according to the default formats: -->
		<tstamp>
			<!--must match the format in AboutDialog2-->
			<format property="BuildDateTime" pattern="MMMM/dd/yyyy hh:mm:ss a, z" />
		</tstamp>
		<property name="versionString" value="${MajorVersion}.${MinorVersion}.${RevisionVersion}" />

		<!-- set global properties for this build -->
		<property name="skins.src.dir" location="src/skins" />

		<property name="distribution.dir" location="src/distribution/PowerFolderBasic" />
		<property name="distribution.installer.dir" location="${distribution.dir}/installer" />

		<!-- Source dirs -->
		<property name="src.dir" location="src" />
		<property name="main.src.dir" location="src/main" />
		<property name="jwf.src.dir" location="src/jwf" />
		<property name="jnotify.src.dir" location="src/jnotify" />
		<property name="etc.dir" location="src/etc" />
		<property name="applet.dir" location="src/applet" />
		<property name="test.src.dir" location="src/test" />
		<property name="skins.src.dir" location="src/skins" />
		<property name="shib.src.dir" location="src/shib" />

		<!-- External Libraries -->
		<fileset id="libs" dir="lib" casesensitive="yes">
			<include name="commons-io-1.3.1.jar" />
			<include name="commons-cli-1.0.jar" />

			<include name="jdic.jar" />

			<include name="binding-2.0.6.jar" />
			<include name="forms-1.2.0.jar" />
			<include name="looks-2.1.4.jar" />
			<include name="validation-2.0.1.jar" />
			<!--<include name="h2-1.1.109.jar" />-->
			<include name="jcalendar.jar" />
			<include name="ejb3-persistence.jar" />
      		<include name="hibernate3-stripped.jar" />

			<include name="annotations-16.0.1.jar" />

      		<!--<include name="jfreechart/jfreechart-1.0.13.jar" />
      		<include name="jfreechart/jcommon-1.0.16.jar" />-->

			<include name="synthetica/commons-logging-1.1.jar" />
			<!--<include name="synthetica/swingx.jar" />-->
			<include name="synthetica/synthetica.jar" />
			<include name="synthetica/syntheticaAddons.jar" />

			<include name="bcprov-ext-jdk15on-152.jar" />
			<include name="bcpkix-jdk15on-152.jar" />
			<include name="bcpg-jdk15on-152.jar" />
			<include name="bcmail-jdk15on-152.jar" />

			<!-- Shibboleth/ECP -->
            <include name="httpclient-4.5.7.jar"/>
            <include name="httpclient-cache-4.5.7.jar"/>
            <include name="httpcore-4.4.11.jar"/>
            <include name="httpmime-4.5.7.jar"/>
			<include name="fluent-hc-4.3.5.jar" />
            <include name="commons-logging-1.1.3.jar" />
			<include name="json-20090306.jar" />

			<!-- ContextMenu and IconOverlay -->
			<include name="liferay-nativity-1.0.6.jar" />

			<!-- Protobuf -->
            <include name="protobuf-java-3.5.0.jar"/>
			<include name="powerfolder-protobuf-0.1.jar"/>

			<!-- Squirrel -->
			<include name="squirrel-foundation-0.3.8.jar"/>

			<!-- Encrypted storage - cryptolib/fs -->
			<include name="cryptomator/commons-codec-1.11.jar" />
            <include name="cryptomator/commons-lang3-3.8.1.jar"/>
            <include name="cryptomator/cryptofs-1.6.2.jar"/>
            <include name="cryptomator/cryptolib-1.2.1.jar"/>
            <include name="cryptomator/dagger-2.21.jar"/>
            <include name="cryptomator/dagger-producers-2.21.jar"/>
            <include name="cryptomator/failureaccess-1.0.1.jar"/>
            <include name="cryptomator/gson-2.8.5.jar"/>
            <include name="cryptomator/guava-27.0.1-jre.jar"/>
			<include name="cryptomator/javax.inject-1.jar"/>
			<include name="cryptomator/slf4j-api-1.7.25.jar"/>
            <include name="cryptomator/siv-mode-1.3.1.jar"/>
            <include name="cryptomator/animal-sniffer-annotations-1.17.jar"/>
            <include name="cryptomator/checker-qual-2.5.8.jar"/>
            <include name="cryptomator/error_prone_annotations-2.3.2.jar"/>
            <include name="cryptomator/j2objc-annotations-1.3.jar"/>
            <include name="cryptomator/jsr305-3.0.2.jar"/>
            <include name="cryptomator/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar"/>

            <include name="quartz-2.2.3.jar"/>
            <include name="quartz-jobs-2.2.3.jar"/>
		</fileset>

		<fileset id="testlibs" dir="lib" casesensitive="yes">
            <include name="junit.jar"/>
			<include name="jmock/cglib-nodep-2.1_3.jar" />
			<include name="jmock/hamcrest-core-1.3.jar" />
			<include name="jmock/hamcrest-library-1.3.jar" />
			<include name="jmock/jmock-2.4.0.jar" />
			<include name="jmock/jmock-junit3-2.4.0.jar" />
			<include name="jmock/jmock-junit4-2.4.0.jar" />
			<include name="jmock/jmock-legacy-2.4.0.jar" />
            <include name="mockito/byte-buddy-1.7.9.jar"/>
            <include name="mockito/byte-buddy-agent-1.7.9.jar"/>
            <include name="mockito/mockito-core-2.12.0.jar"/>
            <include name="mockito/objenesis-2.6.jar"/>
		</fileset>

		<!-- Output dirs -->
		<property name="build.dir" location="${output.dir}/build" />
		<property name="build.test.dir" location="${output.dir}/test" />
		<property name="build.reports.dir" location="${output.dir}/test-reports" />
		<property name="dist.dir" location="${output.dir}/dist" />
		<property name="javadoc.dir" location="${output.dir}/api-docs" />
		<property name="debug.dir" location="${output.dir}/debug" />
		<property name="dist.installer.dir" location="${InstallerFilesLocation}/dist" />

		<property name="javadoc.packages" value="de.dal33t" />
		<property name="javadoc.overview" location="${src.main.dir}/overview.html" />
		<property name="mainclass" value="de.dal33t.powerfolder.PowerFolder" />

    </target>

	<target name="compile" depends="init">
		<mkdir dir="${build.dir}" />

		<javac destdir="${build.dir}" source="1.8" target="1.8" encoding="UTF-8" nowarn="${NoCompileWarnings}" debug="${Debug}" deprecation="off">
			<classpath>
				<fileset refid="libs" />
				<fileset refid="testlibs" />
			</classpath>

			<src path="${main.src.dir}" />
			<src path="${jwf.src.dir}" />
			<src path="${jnotify.src.dir}" />
			<src path="${skins.src.dir}" />
			<src path="${shib.src.dir}" />
		</javac>

		<!-- copy files from etc to include in jar -->
		<copy todir="${build.dir}">
			<fileset dir="${etc.dir}" />
			<fileset file="${main.src.dir}/PowerFolder-LICENSE.txt" />
		</copy>
		<copy todir="${build.dir}">
			<fileset dir="${skins.src.dir}">
				<exclude name="**/*.java" />
				<exclude name="**/*humbs.db" />
			</fileset>
		</copy>
	</target>

	<target name="dist-misc">
		<!-- Create the distribution directory -->
		<mkdir dir="${dist.dir}" />

		<!-- Copy the licenses dir to include in the destribution -->
		<copy todir="${dist.dir}\LICENSE">
			<fileset dir="${etc.dir}">
				<include name="**/*LICENSE*" />
			</fileset>
			<fileset file="${main.src.dir}/PowerFolder-LICENSE.txt" />
		</copy>

		<!-- Copy the Release Notes to include in the distribution -->
		<copy todir="${dist.dir}" overwrite="true">
			<fileset file="${etc.dir}/ReleaseNotes.txt" />
			<fileset file="${main.src.dir}/PowerFolder-LICENSE.txt" />
		</copy>
	</target>

	<target name="jar-unsigned" depends="compile, dist-misc">
		<!-- Put everything in ${build.dir} into the PowerFolder.jar file -->

		<jar jarfile="${dist.dir}/PowerFolder.jar" basedir="${build.dir}" excludes="test*/**/*" update="true" duplicate="preserve">
			<manifest>
				<attribute name="Built-By" value="${BuildBy}" />
				<attribute name="Version" value="${MajorVersion}.${MinorVersion}.${RevisionVersion}" />
				<attribute name="BuildDateTime" value="${BuildDateTime}" />
				<attribute name="Sealed" value="false" />
				<attribute name="Main-Class" value="de.dal33t.powerfolder.PowerFolder" />
			</manifest>
			<zipgroupfileset refid="libs" />
		</jar>
	</target>

	<target name="jar" depends="compile, dist-misc" description="Create a signed jar file of the free-version">
		<!-- Put everything in ${build.dir} into the PowerFolder.jar file -->

		<jar jarfile="${dist.dir}/PowerFolder.jar" basedir="${build.dir}" excludes="test*/**/*" update="true" duplicate="preserve">
			<manifest>
				<attribute name="Built-By" value="${BuildBy}" />
				<attribute name="Version" value="${MajorVersion}.${MinorVersion}.${RevisionVersion}" />
				<attribute name="BuildDateTime" value="${BuildDateTime}" />
				<attribute name="Sealed" value="true" />
				<attribute name="Main-Class" value="de.dal33t.powerfolder.PowerFolder" />
			</manifest>
			<fileset dir="${distribution.dir}">
				<include name="**/*" />
				<exclude name="installer**/*" />
			</fileset>
			<zipgroupfileset refid="libs" />
		</jar>

		<signjar jar="${dist.dir}\PowerFolder.jar" storetype="pkcs12" keystore="${KeystoreLocation}" storepass="${SignPassword}" alias="${SignAlias}" />
	</target>

	<!-- generate an installer  -->
	<target name="prepare-installer" depends="jar">
		<mkdir dir="${dist.installer.dir}" />
		<copy file="${distribution.installer.dir}\settings.nsh" todir="${InstallerFilesLocation}" overwrite="true" />
		<copy todir="${InstallerFilesLocation}\images" overwrite="true">
			<fileset dir="${distribution.installer.dir}\images" />
		</copy>
		<copy todir="${InstallerFilesLocation}\filesvar" overwrite="true">
			<fileset dir="${distribution.installer.dir}\files" />
		</copy>
		<copy file="${dist.dir}\PowerFolder.jar" todir="${InstallerFilesLocation}\filesvar" overwrite="true" />
	</target>

	<target name="zip-source" depends="init" description="Zips all source code">
		<zip zipfile="${dist.dir}/PowerFolder-source.zip" update="true">
			<fileset dir=".">
				<include name="src/**/*" />
				<include name="lib/**/*" />
				<include name="developer_resources/**/*" />
				<include name="build.xml" />
				<include name="build-local.properties.sample" />
				<include name=".project" />
				<include name=".classpath" />
			</fileset>
		</zip>
	</target>

	<target name="installer" depends="prepare-installer" if="isWindows" description="Generate the installer for the free-version">
		<!-- "C:\Program Files\NSIS\makensisw.exe" /DAPPVERSION=v0.9.2 /DVER_MAJOR=0 /DVER_MINOR=9 /DVER_REVISION=2 /DVER_BUILD=0 installer-pro.nsi -->
		<property name="versionString" value="${MajorVersion}.${MinorVersion}.${RevisionVersion}" />
		<exec dir="${InstallerFilesLocation}" executable="${InstallerGeneratorProgram}">
			<arg value="/DAPPVERSION=v${versionString}" />
			<arg value="/DVER_MAJOR=${MajorVersion}" />
			<arg value="/DVER_MINOR=${MinorVersion}" />
			<arg value="/DVER_REVISION=${RevisionVersion}" />
			<!-- FIXME: maybe add a build number (or date:time) here? -->
			<arg value="/DVER_BUILD=0" />
			<arg value="/DJRE_VERSION=${JRE_VERSION}" />
	        <arg value="/DJRE_URL32=${JRE_URL32}" />
	        <arg value="/DJRE_URL32=${JRE_URL64}" />
			<arg value="installer-pro.nsi" />
		</exec>
		<copy todir="${dist.dir}">
			<fileset file="${dist.installer.dir}\**.*" />
		</copy>

		<available file="${dist.dir}/PowerFolder_v${MajorVersion}.${MinorVersion}.${RevisionVersion}_Installer.exe" property="installer.exe" value="${dist.dir}/PowerFolder_v${MajorVersion}.${MinorVersion}.${RevisionVersion}_Installer.exe" />

		<!-- #1497: Sign installer EXE -->
		<exec executable="${InstallerSignProgram}">
			<arg value="sign" />
			<arg value="/f" />
			<arg value="${KeystoreLocation}" />
			<arg value="/p" />
			<arg value="${SignPassword}" />
			<arg value="${installer.exe}" />
		</exec>
	</target>

    <target name="appSign" if="isMac" unless="NoSign" description="Code sign the mac app">
        <echo>
            Sign ${dist.dir}/${dist.name}.app
        </echo>

        <exec dir="/usr/bin" executable="codesign" osfamily="mac">
            <arg value="-f" />
            <arg value="--deep" />
            <arg value="-s" />
            <arg value="${AppSignAlias}" />
            <arg value="${dist.dir}/${dist.name}.app" />
        </exec>
    </target>

	<target name="jarbundler" depends="jar" if="isMac" description="Builds the MacOS JAR Bundle">
        <taskdef name="bundleapp"
            classname="com.oracle.appbundler.AppBundlerTask" />

        <bundleapp outputDirectory="${dist.dir}"
                   name="${dist.name}"
                   displayname="${dist.name}"
                   icon="${distribution.installer.dir}/files/Icon128x128.icns"
                   identifier="${mainclass}"
                   shortVersion="${versionString}"
                   mainclassname="${mainclass}">

            <classpath file="${dist.dir}/${jar.name}" />

            <runtime dir="${java.env}" />

            <option value="-Xms16m" />
            <option value="-Xmx1g" />
            <option value="-XX:NewRatio=8" />
            <option value="-XX:MinHeapFreeRatio=5" />
            <option value="-XX:MaxHeapFreeRatio=10" />
            <option value="-Xdock:name=${dist.name}" />
        </bundleapp>

        <copy file="${etc.dir}/mac64libs/libosxnative.jnilib" todir="${dist.dir}/${dist.name}.app/Contents/MacOS" />

        <antcall target="appSign" />

        <property name="bundle.name" value="${dist.dir}/${dist.binaryname}_v${versionString}" />

        <exec dir="/usr/bin" executable="hdiutil" osfamily="mac">
            <arg value="create" />
            <arg value="-size" />
            <arg value="250m" />
            <arg value="-fs" />
            <arg value="HFS+" />
            <arg value="-volname" />
            <arg value="${dist.name}" />
            <arg value="${bundle.name}-temp.dmg" />
        </exec>

        <exec dir="/usr/bin" executable="hdiutil" osfamily="mac">
            <arg value="attach" />
            <arg value="${bundle.name}-temp.dmg" />
            <arg value="-readwrite" />
            <arg value="-mount" />
            <arg value="required" />
        </exec>

        <copy todir="/Volumes/${dist.name}/">
            <fileset dir="${dist.dir}">
                <include name="*.app/**" />
            </fileset>
            <fileset file="${powerfolder.project.dir}/lib-build/Uninstall.command" />
        </copy>
<!--
        <exec dir="/bin" executable="ln" osfamily="mac">
            <arg value="-s" />
            <arg value="/Applications" />
            <arg value="/Volumes/${dist.name}/Applications" />
        </exec>
-->
        <exec dir="/bin" executable="chmod" osfamily="mac">
            <arg value="u+x" />
            <arg value="/Volumes/${dist.name}/${dist.name}.app/Contents/MacOS/JavaAppLauncher" />
        </exec>

        <exec dir="/bin" executable="chmod" osfamily="mac">
            <arg value="u+x" />
            <arg value="/Volumes/${dist.name}/Uninstall.command" />
        </exec>

        <exec dir="/usr/bin" executable="hdiutil" osfamily="mac">
            <arg value="detach" />
            <arg value="/Volumes/${dist.name}" />
        </exec>

        <exec dir="/usr/bin" executable="hdiutil" osfamily="mac">
            <arg value="convert" />
            <arg value="${bundle.name}-temp.dmg" />
            <arg value="-format" />
            <arg value="UDZO" />
            <arg value="-imagekey" />
            <arg value="zlib-level=9" />
            <arg value="-o" />
            <arg value="${bundle.name}.dmg" />
        </exec>

        <delete dir="${dist.dir}/${dist.name}.app" />
        <delete file="${bundle.name}-temp.dmg" />
        <delete file="${dist.dir}/${dist.name}.jar" />
	</target>
	
	<target name="dist-client" description="Builds all client distribution files" depends="jarbundler, installer"/>

	<!-- clean the working dirs -->
	<target name="clean" description="clean up" depends="init">
		<!-- Delete the ${build.dir} and ${dist.dir} directory trees -->
		<delete dir="${build.dir}" />
		<delete dir="${dist.dir}" />
		<delete dir="${build.reports.dir}" />
		<delete dir="${debug.dir}" />
	</target>

	<target name="jni-compile">
		<mkdir dir="./build/mac/jni" />
		<javah destdir="./build/mac/jni"
		  force="yes"
		  class="de.dal33t.powerfolder.jni.osx.Util"
		  classpath="./build/" />
	</target>
	
	<!-- Setup for test ******************************************************-->

	<target name="run-tests" depends="debug, compile" description="Runs all JUnit tests">
		<mkdir dir="${build.reports.dir}" />

		<!-- Compile tests -->
		<javac destdir="${build.dir}" debug="${Debug}" deprecation="off" failonerror="true" encoding="UTF-8">
			<src path="${test.src.dir}" />
			<classpath>
				<pathelement location="${build.dir}" />
				<fileset refid="libs" />
				<fileset refid="testlibs" />
			</classpath>
		</javac>
		<mkdir dir="${build.reports.dir}/raw" />
		<mkdir dir="${build.reports.dir}/html" />
		<mkdir dir="${build.reports.dir}/htmlnoframes" />
		<!-- Batchrun all tests -->
		<junit printsummary="yes" haltonfailure="false" fork="yes" maxmemory="10g">
			<!-- Reason: https://code.google.com/p/opendedup/issues/detail?id=34 -->
			<sysproperty key="file.encoding" value="UTF-8"/>
			<classpath>
				<pathelement location="${build.dir}" />
				<fileset refid="libs" />
				<fileset refid="testlibs" />
			</classpath>

			<formatter type="xml" />
			<batchtest fork="yes" todir="${build.reports.dir}/raw">
				<fileset dir="${test.src.dir}">
					<include name="**/*Test.java" />
					<exclude name="**/BandwidthLimitTest.java" />
				</fileset>
			</batchtest>
		</junit>

		<junitreport todir="${build.reports.dir}">
			<fileset dir="${build.reports.dir}/raw/">
				<include name="TEST-*.xml" />
			</fileset>
			<report format="frames" todir="${build.reports.dir}/html/" />
		</junitreport>

		<junitreport todir="${build.reports.dir}">
			<fileset dir="${build.reports.dir}/raw/">
				<include name="TEST-*.xml" />
			</fileset>
			<report format="noframes" todir="${build.reports.dir}/htmlnoframes/" />
		</junitreport>
	</target>

	<!-- API Docs generation -->
	<target name="api-docs" depends="compile" description="Creates the API Documentation">
		<javadoc sourcepath="${main.src.dir}" destdir="${javadoc.dir}" access="${javadoc.access}" author="true" version="true" use="true" windowtitle="PowerFolder API Documentation" Overview="${main.src.dir}/overview.html">
			<classpath>
				<pathelement location="${build.dir}" />
			</classpath>

			<packageset dir="${main.src.dir}" defaultexcludes="yes">
				<include name="de/dal33t/*/**" />
			</packageset>

			<doctitle>
				<![CDATA[<h1>PowerFolder API Documentation</h1>]]>
			</doctitle>
		<link href="http://java.sun.com/j2se/1.5.0/docs/api" />
	</javadoc>
</target>

<!-- Build the download applet. -->
<target name="jar-applet" depends="init">

	<mkdir dir="${dist.dir}" />
	<mkdir dir="${build.dir}" />

	<javac destdir="${dist.dir}" source="1.2" target="1.1" encoding="UTF-8" nowarn="${NoCompileWarnings}" debug="${Debug}" deprecation="off">
		<compilerarg value="-Xlint:${Unchecked}" />
		<compilerarg value="-Xlint:${Fallthrough}" />

		<src path="${applet.dir}" />
	</javac>

	<!-- copy files from etc to include in jar -->
	<copy todir="${dist.dir}">
		<fileset dir="${applet.dir}">
			<include name="**/*.html" />
		</fileset>
	</copy>


	<!-- <jar jarfile="${dist.dir}/DownloadApplet.jar" basedir="${build.dir}" excludes="test*/**/*" update="true">
                    <manifest>
                        <attribute name="Built-By" value="${BuildBy}" />
                        <attribute name="Version" value="${MajorVersion}.${MinorVersion}.${RevisionVersion}" />
                        <attribute name="BuildDateTime" value="${BuildDateTime}" />
                        <attribute name="Sealed" value="true" />
                        <attribute name="Main-Class" value="de.dal33t.powerfolder.PowerFolder" />
                    </manifest>
                </jar>-->
</target>

</project>
